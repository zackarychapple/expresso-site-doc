"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[228],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var s=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},o=Object.keys(e);for(s=0;s<o.length;s++)r=o[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)r=o[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=s.createContext({}),p=function(e){var t=s.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return s.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return r?s.createElement(h,a(a({ref:t},c),{},{components:r})):s.createElement(h,a({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:n,a[1]=i;for(var p=2;p<o;p++)a[p]=r[p];return s.createElement.apply(null,a)}return s.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4581:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var s=r(7462),n=(r(7294),r(3905));const o={sidebar_position:13},a="Status Code",i={unversionedId:"overview/status-code",id:"overview/status-code",title:"Status Code",description:"Status code is a way to represent the result of a request. These HTTP responses indicate whether a specific HTTP request has been successfully completed. Responses are grouped in five classes:",source:"@site/docs/overview/status-code.md",sourceDirName:"overview",slug:"/overview/status-code",permalink:"/docs/overview/status-code",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Dependencies",permalink:"/docs/overview/dependencies"},next:{title:"Error Handling",permalink:"/docs/overview/error-handling"}},l={},p=[{value:"ExpressoTS status code",id:"expressots-status-code",level:2},{value:"In a Controller",id:"in-a-controller",level:3},{value:"In a Use Case",id:"in-a-use-case",level:3},{value:"Support the project",id:"support-the-project",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,s.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"status-code"},"Status Code"),(0,n.kt)("p",null,"Status code is a way to represent the result of a request. These HTTP responses indicate whether a specific HTTP request has been successfully completed. Responses are grouped in five classes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Informational responses (100-199)"),(0,n.kt)("li",{parentName:"ul"},"Successful responses (200-299)"),(0,n.kt)("li",{parentName:"ul"},"Redirection messages (300-399)"),(0,n.kt)("li",{parentName:"ul"},"Client error responses (400-499)"),(0,n.kt)("li",{parentName:"ul"},"Server error responses (500-599)")),(0,n.kt)("p",null,"You can find more details about the status code in the ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"},"MDN Web Docs")),"."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"The status codes listed below are defined by ",(0,n.kt)("a",{parentName:"p",href:"https://httpwg.org/specs/rfc9110.html#overview.of.status.codes"},"RFC 9110"))),(0,n.kt)("h2",{id:"expressots-status-code"},"ExpressoTS status code"),(0,n.kt)("p",null,"In ExpressoTS, we have a list of all status codes listed in the MDN that you can use in your application. Here is an example of use:"),(0,n.kt)("h3",{id:"in-a-controller"},"In a Controller"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { StatusCode } from "@expressots/core";\n\n@controller("/user/create")\nclass CreateUserController extends BaseController {\n    constructor(private createUserUseCase: CreateUserUseCase) {\n        super("create-user-controller");\n    }\n\n    @httpPost("/")\n    execute(\n        @requestBody() data: ICreateUserRequestDTO,\n        @response() res: any,\n    ): ICreateUserResponseDTO {\n        return this.callUseCase(\n            this.createUserUseCase.execute(data),\n            res,\n            StatusCode.Created, // Status code\n        );\n    }\n}\n')),(0,n.kt)("h3",{id:"in-a-use-case"},"In a Use Case"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { StatusCode } from "@expressots/core";\n\n@provide(CreateUserUseCase)\nclass CreateUserUseCase {\n    constructor(private userRepository: UserRepository) {}\n\n    execute(data: ICreateUserRequestDTO): ICreateUserResponseDTO | null {\n        try {\n            const { name, email } = data;\n\n            const user: User | null = this.userRepository.create(\n                new User(name, email),\n            );\n\n            if (!user) {\n                Report.Error("User already exists", StatusCode.BadRequest,"create-user-usecase");\n            }\n\n            let response: ICreateUserResponseDTO;\n\n            if (user !== null) {\n                response = {\n                    id: user.Id,\n                    name: user.name,\n                    email: user.email,\n                    status: "success",\n                };\n                return response;\n            }\n\n            return null;\n        } catch (error: any) {\n            throw error;\n        }\n    }\n}\n')),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"support-the-project"},"Support the project"),(0,n.kt)("p",null,"ExpressoTS is an MIT-licensed open source project. It's an independent project with ongoing development made possible thanks to your support. If you'd like to help, please consider:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Become a sponsor on ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/sponsors/expressots"},"Sponsor no GitHub"))),(0,n.kt)("li",{parentName:"ul"},"Follow the ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/expressots"},"organization"))," on GitHub and Star \u2b50 the project"),(0,n.kt)("li",{parentName:"ul"},"Subscribe to the Twitch channel: ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://www.twitch.tv/richardzampieri"},"Richard Zampieri"))),(0,n.kt)("li",{parentName:"ul"},"Join our ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://discord.com/invite/PyPJfGK"},"Discord"))),(0,n.kt)("li",{parentName:"ul"},"Contribute submitting ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/expressots/expressots/issues/new/choose"},"issues and pull requests"))),(0,n.kt)("li",{parentName:"ul"},"Share the project with your friends and colleagues")))}d.isMDXComponent=!0}}]);