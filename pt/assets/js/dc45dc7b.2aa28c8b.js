"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[749],{3905:(e,o,t)=>{t.d(o,{Zo:()=>l,kt:()=>f});var a=t(7294);function r(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function s(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);o&&(a=a.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?s(Object(t),!0).forEach((function(o){r(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function n(e,o){if(null==e)return{};var t,a,r=function(e,o){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,o);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),p=function(e){var o=a.useContext(d),t=o;return e&&(t="function"==typeof e?e(o):i(i({},o),e)),t},l=function(e){var o=p(e.components);return a.createElement(d.Provider,{value:o},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var o=e.children;return a.createElement(a.Fragment,{},o)}},u=a.forwardRef((function(e,o){var t=e.components,r=e.mdxType,s=e.originalType,d=e.parentName,l=n(e,["components","mdxType","originalType","parentName"]),m=p(t),u=r,f=m["".concat(d,".").concat(u)]||m[u]||c[u]||s;return t?a.createElement(f,i(i({ref:o},l),{},{components:t})):a.createElement(f,i({ref:o},l))}));function f(e,o){var t=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=u;var n={};for(var d in o)hasOwnProperty.call(o,d)&&(n[d]=o[d]);n.originalType=e,n[m]="string"==typeof e?e:r,i[1]=n;for(var p=2;p<s;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4086:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>n,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const s={sidebar_position:8},i="Reposit\xf3rios",n={unversionedId:"overview/repositories",id:"overview/repositories",title:"Reposit\xf3rios",description:"No ExpressoTS, uma classe de reposit\xf3rio geralmente inclui m\xe9todos como create, update, find, findOne e delete, que correspondem a opera\xe7\xf5es comuns de CRUD (Create, Read, Update, Delete) no armazenamento de dados. Esses m\xe9todos podem ser implementados usando uma biblioteca de banco de dados ou uma ferramenta de ORM (Object-Relational Mapping) como o TypeORM, Prisma, Sequelize, etc.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/overview/repositories.md",sourceDirName:"overview",slug:"/overview/repositories",permalink:"/pt/docs/overview/repositories",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Provedores",permalink:"/pt/docs/overview/providers"},next:{title:"Entidades",permalink:"/pt/docs/overview/entities"}},d={},p=[{value:"O padr\xe3o de reposit\xf3rio",id:"o-padr\xe3o-de-reposit\xf3rio",level:2},{value:"Objetivo do padr\xe3o de reposit\xf3rio",id:"objetivo-do-padr\xe3o-de-reposit\xf3rio",level:2},{value:"Benef\xedcios de usar o padr\xe3o de reposit\xf3rio",id:"benef\xedcios-de-usar-o-padr\xe3o-de-reposit\xf3rio",level:2},{value:"Exemplo",id:"exemplo",level:2},{value:"Interface do base reposit\xf3rio",id:"interface-do-base-reposit\xf3rio",level:3},{value:"Classe base reposit\xf3rio",id:"classe-base-reposit\xf3rio",level:3},{value:"User repository",id:"user-repository",level:3},{value:"Apoie o projeto",id:"apoie-o-projeto",level:2}],l={toc:p},m="wrapper";function c(e){let{components:o,...t}=e;return(0,r.kt)(m,(0,a.Z)({},l,t,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"reposit\xf3rios"},"Reposit\xf3rios"),(0,r.kt)("p",null,"No ExpressoTS, uma classe de reposit\xf3rio geralmente inclui m\xe9todos como create, update, find, findOne e delete, que correspondem a opera\xe7\xf5es comuns de CRUD (Create, Read, Update, Delete) no armazenamento de dados. Esses m\xe9todos podem ser implementados usando uma biblioteca de banco de dados ou uma ferramenta de ORM (Object-Relational Mapping) como o ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://typeorm.io/"},"TypeORM"),", ",(0,r.kt)("a",{parentName:"strong",href:"https://www.prisma.io/"},"Prisma"),", ",(0,r.kt)("a",{parentName:"strong",href:"https://sequelize.org/"},"Sequelize"),",")," etc."),(0,r.kt)("h2",{id:"o-padr\xe3o-de-reposit\xf3rio"},"O padr\xe3o de reposit\xf3rio"),(0,r.kt)("p",null,"O padr\xe3o repository \xe9 um padr\xe3o de design comumente usado no desenvolvimento de software que fornece uma maneira de abstrair a camada de persist\xeancia de dados de uma aplica\xe7\xe3o. Em TypeScript, esse padr\xe3o pode ser implementado usando classes que representam reposit\xf3rios, que s\xe3o respons\xe1veis por recuperar, armazenar, atualizar e excluir dados de uma fonte de dados, como um banco de dados."),(0,r.kt)("p",null,"N\xf3s oferecemos um exemplo de como implementar o padr\xe3o de reposit\xf3rio no modelo de projeto do ExpressoTS. Voc\xea pode encontr\xe1-lo diretamente no ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/expressots/expressots/tree/main/templates"},"templates"),", pasta template do ExpressoTS."),(0,r.kt)("h2",{id:"objetivo-do-padr\xe3o-de-reposit\xf3rio"},"Objetivo do padr\xe3o de reposit\xf3rio"),(0,r.kt)("p",null,"O objetivo principal do padr\xe3o repository \xe9 separar a l\xf3gica de neg\xf3cio da l\xf3gica de acesso aos dados, permitindo que os desenvolvedores escrevam c\xf3digo mais focado nos requisitos de neg\xf3cio da aplica\xe7\xe3o, em vez dos detalhes t\xe9cnicos de como os dados s\xe3o armazenados e acessados."),(0,r.kt)("h2",{id:"benef\xedcios-de-usar-o-padr\xe3o-de-reposit\xf3rio"},"Benef\xedcios de usar o padr\xe3o de reposit\xf3rio"),(0,r.kt)("p",null,"Ao usar o padr\xe3o de reposit\xf3rio, podemos trocar facilmente o mecanismo de armazenamento de dados subjacente sem afetar o restante do aplicativo. Por exemplo, podemos mudar de um banco de dados relacional para um banco de dados NoSQL ou at\xe9 mesmo um mecanismo de armazenamento completamente diferente, como uma API da Web, com altera\xe7\xf5es m\xednimas no restante do c\xf3digo do aplicativo. Al\xe9m disso, o padr\xe3o de reposit\xf3rio pode facilitar o teste do aplicativo, pois podemos usar reposit\xf3rios fict\xedcios para simular o armazenamento de dados para fins de teste. Aqui est\xe3o alguns dos benef\xedcios de usar o padr\xe3o de reposit\xf3rio:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Centraliza\xe7\xe3o da l\xf3gica de acesso a dados: toda a l\xf3gica de acesso a dados \xe9 contida dentro do reposit\xf3rio, tornando mais f\xe1cil manter e alterar a implementa\xe7\xe3o do armazenamento de dados sem afetar o resto da aplica\xe7\xe3o.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Abstra\xe7\xe3o dos detalhes do armazenamento de dados: o reposit\xf3rio fornece uma camada de abstra\xe7\xe3o que oculta os detalhes de como os dados s\xe3o armazenados e acessados, permitindo que a aplica\xe7\xe3o trabalhe com dados de uma forma mais abstrata e consistente.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Separa\xe7\xe3o de preocupa\xe7\xf5es: o reposit\xf3rio separa a l\xf3gica de neg\xf3cios da l\xf3gica de acesso a dados, tornando o c\xf3digo mais f\xe1cil de ler, testar e manter.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Melhoria na testabilidade: o reposit\xf3rio pode ser facilmente simulado ou substitu\xeddo em testes de unidade, permitindo testar com mais profundidade a l\xf3gica de neg\xf3cios sem precisar se conectar a um armazenamento de dados real.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Em geral, o padr\xe3o repository \xe9 uma ferramenta poderosa que pode ajudar os desenvolvedores a construir aplicativos TypeScript escal\xe1veis e f\xe1ceis de manter que est\xe3o mais focados nos requisitos de neg\xf3cios e menos nos detalhes de implementa\xe7\xe3o t\xe9cnica."))),(0,r.kt)("h2",{id:"exemplo"},"Exemplo"),(0,r.kt)("p",null,"Oferecemos um exemplo de implementa\xe7\xe3o do padr\xe3o Repository no template opinativo do ExpressoTS."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"No ExpressoTS, implementamos o padr\xe3o repository em uma pasta espec\xedfica chamada  ",(0,r.kt)("strong",{parentName:"p"},'"repositories"'),", que \xe9 separada da pasta ",(0,r.kt)("strong",{parentName:"p"},'"provider"')," intencionalmente, embora possa ser considerada como um tipo de provider. Fizemos isso para dar mais \xeanfase ao padr\xe3o repository e deixar claro para os desenvolvedores que ele \xe9 um desacoplamento importante que o desenvolvimento da aplica\xe7\xe3o pode se beneficiar.")),(0,r.kt)("h3",{id:"interface-do-base-reposit\xf3rio"},"Interface do base reposit\xf3rio"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface IEntity {\n  Id: string;\n}\n\ninterface IBaseRepository<T> {\n  create(item: T): T | null;\n  update(item: T): T | null;\n  delete(id: string): boolean;\n  find(id: string): T | null;\n  findAll(): T[];\n}\n")),(0,r.kt)("h3",{id:"classe-base-reposit\xf3rio"},"Classe base reposit\xf3rio"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@provide(BaseRepository)\nclass BaseRepository<T extends IEntity> implements IBaseRepository<T> {\n  private readonly USERDB: T[] = [];\n\n  create(item: T): T | null {\n    this.DB.push(item);\n    return item;\n  }\n\n  update(item: T) {\n    this.DB.push(item);\n    return item;\n  }\n\n  delete(id: string): boolean {\n    const index: number = this.DB.findIndex((item) => item.Id === id);\n\n    if (index != -1) {\n      this.DB.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  find(id: string): T | null {\n    const user = this.DB.find((item) => item.Id === id);\n    return user || null;\n  }\n\n  findAll(): T[] {\n    return this.DB;\n  }\n}\n")),(0,r.kt)("h3",{id:"user-repository"},"User repository"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@provide(UserRepository)\nclass UserRepository extends BaseRepository<User> {\n  constructor() {\n    super();\n  }\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"apoie-o-projeto"},"Apoie o projeto"),(0,r.kt)("p",null,"ExpressoTS \xe9 um projeto de c\xf3digo aberto licenciado sob o MIT. \xc9 um projeto independente com desenvolvimento cont\xednuo possibilitado gra\xe7as ao seu suporte. Se voc\xea deseja ajudar, por favor considere:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se tornar um ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/sponsors/expressots"},"Sponsor no GitHub"))),(0,r.kt)("li",{parentName:"ul"},"Siga a ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/expressots"},"organiza\xe7\xe3o"))," no GitHub e de um Star \u2b50 no projeto"),(0,r.kt)("li",{parentName:"ul"},"Subscreva no nosso canal na Twitch: ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://www.twitch.tv/richardzampieri"},"Richard Zampieri"))),(0,r.kt)("li",{parentName:"ul"},"Entre no nosso ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://discord.com/invite/PyPJfGK"},"Discord"))),(0,r.kt)("li",{parentName:"ul"},"Contribua submetendo ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/expressots/expressots/issues/new/choose"},"issues e pull requests"))),(0,r.kt)("li",{parentName:"ul"},"Compartilhe o projeto com seus amigos e colegas")))}c.isMDXComponent=!0}}]);