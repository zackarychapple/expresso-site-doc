"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[480],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var o=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,r=function(e,t){if(null==e)return{};var a,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=o.createContext({}),i=function(e){var t=o.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=i(e.components);return o.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=i(a),m=r,k=c["".concat(d,".").concat(m)]||c[m]||u[m]||n;return a?o.createElement(k,s(s({ref:t},p),{},{components:a})):o.createElement(k,s({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,s=new Array(n);s[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:r,s[1]=l;for(var i=2;i<n;i++)s[i]=a[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3143:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>i});var o=a(7462),r=(a(7294),a(3905));const n={sidebar_position:5},s="Controladores",l={unversionedId:"overview/controller",id:"overview/controller",title:"Controladores",description:"Os Controladores atuam como a principal interface entre o cliente e o servidor em aplica\xe7\xf5es Node.js. Eles lidam com as requisi\xe7\xf5es recebidas, validam os dados conforme o DTO de entrada, e retornam as respostas no formato DTO. Em ess\xeancia, os controllers atuam como a ponte entre os clientes e as camadas de servi\xe7o, tamb\xe9m conhecidas como casos de uso.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/overview/controller.md",sourceDirName:"overview",slug:"/overview/controller",permalink:"/pt/docs/overview/controller",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"M\xf3dulos",permalink:"/pt/docs/overview/module"},next:{title:"Casos de Uso",permalink:"/pt/docs/overview/usecase"}},d={},i=[{value:"Padr\xe3o DTO",id:"padr\xe3o-dto",level:2},{value:"Exemplo de DTO",id:"exemplo-de-dto",level:3},{value:"Classe Controller",id:"classe-controller",level:2},{value:"Classe BaseController",id:"classe-basecontroller",level:2},{value:"Escopo do controller",id:"escopo-do-controller",level:2},{value:"Decoradores do controlador",id:"decoradores-do-controlador",level:2},{value:"Decoradores de m\xe9todos HTTP",id:"decoradores-de-m\xe9todos-http",level:3},{value:"Decoradores de par\xe2metros",id:"decoradores-de-par\xe2metros",level:3},{value:"Uma abordagem MVC",id:"uma-abordagem-mvc",level:2},{value:"Apoie o projeto",id:"apoie-o-projeto",level:2}],p={toc:i},c="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"controladores"},"Controladores"),(0,r.kt)("p",null,"Os Controladores atuam como a principal interface entre o cliente e o servidor em aplica\xe7\xf5es Node.js. Eles lidam com as requisi\xe7\xf5es recebidas, validam os dados conforme o DTO de entrada, e retornam as respostas no formato DTO. Em ess\xeancia, os controllers atuam como a ponte entre os clientes e as camadas de servi\xe7o, tamb\xe9m conhecidas como casos de uso."),(0,r.kt)("h2",{id:"padr\xe3o-dto"},"Padr\xe3o DTO"),(0,r.kt)("p",null,"O Data Transfer Object (DTO) \xe9 um padr\xe3o de design comumente usado em aplica\xe7\xf5es Node.js que padroniza os formatos de dados para a comunica\xe7\xe3o entre diferentes camadas da aplica\xe7\xe3o, incluindo cliente-servidor ou m\xf3dulos de servidor. O DTO serve como uma interface para a troca de dados, garantindo estruturas claras e padronizadas para os dados de entrada e sa\xedda. Ao separar a l\xf3gica de neg\xf3cios da l\xf3gica de comunica\xe7\xe3o, ajuda a reduzir a complexidade da aplica\xe7\xe3o e desacoplar diferentes camadas."),(0,r.kt)("p",null,"O uso de DTOs pode melhorar o desempenho e a escalabilidade da aplica\xe7\xe3o, reduzindo a transfer\xeancia de dados entre o cliente e o servidor e fornecendo maneiras mais eficientes de processar e manipular dados dentro da aplica\xe7\xe3o."),(0,r.kt)("h3",{id:"exemplo-de-dto"},"Exemplo de DTO"),(0,r.kt)("p",null,"Por exemplo, imagine um cen\xe1rio de registro de usu\xe1rio em que s\xe3o coletados nome, e-mail e senha, e o ID \xe9 gerado automaticamente. O objeto DTO de usu\xe1rio para entrada e resposta pode ter poss\xedveis formatos, como mostrado abaixo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'// UserCreateInputDTO\ninterface UserCreateInputDTO {\n  name: string;\n  email: string;\n  password: string;\n}\n\n// UserCreateResponseDTO\ninterface UserCreateResponseDTO {\n  id: string;\n  name: string;\n  status: string;\n}\n\n// Payload json formato\n{\n  "name": string,\n  "email": string,\n  "password": string\n}\n')),(0,r.kt)("p",null,"Ter dois formatos diferentes de DTO \xe9 essencial nesse caso, porque ao registrar um usu\xe1rio, n\xe3o queremos retornar a senha para o cliente por motivos de seguran\xe7a. Portanto, criamos um DTO diferente para a resposta, adicionando um campo complementar chamado status, onde \xe9 enviada uma mensagem ao cliente, indicando que o usu\xe1rio foi criado com sucesso."),(0,r.kt)("p",null,"Como resultado, os DTOs ajudam a segregar e filtrar os dados enviados ao cliente, reduzindo a quantidade de dados processados pela aplica\xe7\xe3o."),(0,r.kt)("h2",{id:"classe-controller"},"Classe Controller"),(0,r.kt)("p",null,"A classe controller no ExpressoTS representa o endpoint que voc\xea deseja criar para a sua aplica\xe7\xe3o. Voc\xea pode definir a rota e o m\xe9todo HTTP para o controller usando o decorador ",(0,r.kt)("inlineCode",{parentName:"p"},"@controller()")," do ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/inversify/inversify-express-utils"},"Inversify Express Utils package"),"."),(0,r.kt)("p",null,"Cada classe de controlador cont\xe9m um \xfanico m\xe9todo chamado ",(0,r.kt)("inlineCode",{parentName:"p"},"execute()")," que manipula a solicita\xe7\xe3o e envia a resposta. Este m\xe9todo \xe9 anotado ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/pt/docs/overview/decorators"},"@httpMethods()"))," com decorador do mesmo pacote Inversify. Adicionalmente os par\xe2metros do m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"execute()")," pode tamb\xe9m ser anotados."),(0,r.kt)("p",null,"Aqui est\xe1 um exemplo de uma classe de controlador ExpressoTS:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'@controller("/")\nclass AppController {\n  \n  @httpGet("/")\n  execute(@response() res: any) {\n    return res.send("Hello from ExpressoTS!");\n  }\n}\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Na classe AppController acima, estamos usando res como qualquer ",(0,r.kt)("inlineCode",{parentName:"p"},"res:any"),", mas voc\xea pode definitivamente usar o tipo ",(0,r.kt)("inlineCode",{parentName:"p"},"res:Response")," do pacote express, pois expomos seus tipos. Isso permitir\xe1 que voc\xea use todos os m\xe9todos que a classe ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://expressjs.com/en/4x/api.html#res"},"Response"))," oferece.  ")),(0,r.kt)("h2",{id:"classe-basecontroller"},"Classe BaseController"),(0,r.kt)("p",null,"A classe ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseController")," \xe9 utilizada como base para as classes de controller, oferecendo no construtor um par\xe2metro que o desenvolvedor pode indicar qual servi\xe7o ou dom\xednio ele est\xe1 atualmente construindo. Isso ajuda o sistema de log a lan\xe7ar erros com mais informa\xe7\xf5es sobre o contexto do erro e onde o erro ocorreu."),(0,r.kt)("p",null,"Outra vantagem de usar a classe ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseController")," \xe9 que ela oferece um m\xe9todo em duas vers\xf5es diferentes, ass\xedncrona e s\xedncrona, que \xe9 o ",(0,r.kt)("inlineCode",{parentName:"p"},"callUseCase()")," ou ",(0,r.kt)("inlineCode",{parentName:"p"},"callUseCaseAsync()"),"."),(0,r.kt)("p",null,"Esses m\xe9todos refor\xe7am a ideia de um caso de uso por controller e s\xe3o respons\xe1veis por chamar o caso de uso que ir\xe1 implementar a l\xf3gica de neg\xf3cio do controller."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Os m\xe9todos callUseCase, dispon\xedveis nas vers\xf5es s\xedncrona e ass\xedncrona, s\xe3o adequados para retornar status e respostas JSON aos clientes, pois os usu\xe1rios precisam apenas passar o retorno do useCase, res: Response e o c\xf3digo de status.")),(0,r.kt)("p",null,"Esta \xe9 a assinatura do m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"callUseCase"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"callUseCase(useCase: any, res: any, successStatusCode: number);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"useCase"),": O caso de uso a ser chamado. O caso de uso \xe9 injetado no construtor do controler."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"res"),": O objeto resposta do tipe express Response."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"successStatusCode"),": O c\xf3digo de status indica o resultado da solicita\xe7\xe3o HTTP e \xe9 enviado ao cliente quando o caso de uso \xe9 executado com \xeaxito. Para mais informa\xe7\xf5es sobre Status code visite ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/pt/docs/overview/status-code"},"Http Status Code")),".")),(0,r.kt)("p",null,"Resposta padr\xe3o:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"return res.status(successStatusCode).json(dataReturn);\n")),(0,r.kt)("p",null,"Um exemplo mais completo de uma classe de controlador que herda da classe BaseController \xe9 mostrado abaixo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'@controller("/")\nclass AppController extends BaseController {\n  constructor(private appUseCase: AppUseCase) {\n    super("app-controller");\n  }\n\n  @httpGet("/")\n  execute(@response() res: any): IAppResponseDTO {\n    return this.callUseCase(this.appUseCase.execute(),\n      res,\n      StatusCode.OK\n    );\n  }\n}\n')),(0,r.kt)("h2",{id:"escopo-do-controller"},"Escopo do controller"),(0,r.kt)("p",null,"O escopo padr\xe3o de um controlador \xe9 ",(0,r.kt)("inlineCode",{parentName:"p"},"Request"),", pois \xe9 herdado do ",(0,r.kt)("inlineCode",{parentName:"p"},"AppContainer")," e do escopo de classe padr\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"Module"),". No entanto, voc\xea pode substituir o escopo de um controlador usando o decorador ",(0,r.kt)("inlineCode",{parentName:"p"},"@scope()"),". Este decorador aceita os mesmos valores de enumera\xe7\xe3o BindingScopeEnum."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Se voc\xea definir o escopo do m\xf3dulo, n\xe3o poder\xe1 substitu\xed-lo em um controlador espec\xedfico usando o decorador ",(0,r.kt)("inlineCode",{parentName:"p"},"@scope"),".\nO decorador ",(0,r.kt)("inlineCode",{parentName:"p"},"@scope")," s\xf3 pode ser usado em controladores espec\xedficos se o escopo do m\xf3dulo n\xe3o estiver definido.")),(0,r.kt)("p",null,"Aqui est\xe1 um exemplo de uso:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'@scope(BindingScopeEnum.Singleton)\n@controller("/")\nclass CreateUserController extends BaseController { }\n')),(0,r.kt)("p",null,"O controlador acima ter\xe1 o escopo de ",(0,r.kt)("inlineCode",{parentName:"p"},"Singleton")," e ser\xe1 compartilhado entre todas as solicita\xe7\xf5es."),(0,r.kt)("h2",{id:"decoradores-do-controlador"},"Decoradores do controlador"),(0,r.kt)("p",null,"Os decoradores de m\xe9todos HTTP e par\xe2metros s\xe3o um conjunto de anota\xe7\xf5es usadas em aplica\xe7\xf5es ExpressoTS para definir o roteamento e o tratamento de solicita\xe7\xf5es HTTP. O uso desses decoradores pode simplificar o roteamento e o tratamento de solicita\xe7\xf5es HTTP em aplica\xe7\xf5es Node.js e tornar o c\xf3digo mais leg\xedvel e f\xe1cil de manter."),(0,r.kt)("h3",{id:"decoradores-de-m\xe9todos-http"},"Decoradores de m\xe9todos HTTP"),(0,r.kt)("p",null,"Aqui est\xe1 uma lista de todos os decoradores ",(0,r.kt)("inlineCode",{parentName:"p"},"@httpMethods()")," dispon\xedveis no ExpressoTS, juntamente com sua descri\xe7\xe3o e uso:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Decorador"),(0,r.kt)("th",{parentName:"tr",align:null},"Descri\xe7\xe3o"),(0,r.kt)("th",{parentName:"tr",align:null},"Uso"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@httpGet"),(0,r.kt)("td",{parentName:"tr",align:null},"Vincula um m\xe9todo de controlador a um verbo HTTP GET."),(0,r.kt)("td",{parentName:"tr",align:null},'@httpGet("/path")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@httpPost"),(0,r.kt)("td",{parentName:"tr",align:null},"Vincula um m\xe9todo de controlador a um verbo HTTP POST."),(0,r.kt)("td",{parentName:"tr",align:null},'@httpPost("/path")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@httpPut"),(0,r.kt)("td",{parentName:"tr",align:null},"Vincula um m\xe9todo de controlador a um verbo HTTP PUT."),(0,r.kt)("td",{parentName:"tr",align:null},'@httpPut("/path")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@httpPatch"),(0,r.kt)("td",{parentName:"tr",align:null},"Vincula um m\xe9todo de controlador a um verbo HTTP PATCH."),(0,r.kt)("td",{parentName:"tr",align:null},'@httpPatch("/path")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@httpHead"),(0,r.kt)("td",{parentName:"tr",align:null},"Vincula um m\xe9todo de controlador a um verbo HTTP HEAD."),(0,r.kt)("td",{parentName:"tr",align:null},'@httpHead("/path")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@httpDelete"),(0,r.kt)("td",{parentName:"tr",align:null},"Vincula um m\xe9todo de controlador a um verbo HTTP DELETE."),(0,r.kt)("td",{parentName:"tr",align:null},'@httpDelete("/path")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@httpMethod"),(0,r.kt)("td",{parentName:"tr",align:null},"Vincula um m\xe9todo de controlador a um verbo HTTP especificado."),(0,r.kt)("td",{parentName:"tr",align:null},'@httpMethod("verb", "/path")')))),(0,r.kt)("h3",{id:"decoradores-de-par\xe2metros"},"Decoradores de par\xe2metros"),(0,r.kt)("p",null,"Aqui est\xe1 uma lista de todos os decoradores de par\xe2metros dispon\xedveis no ExpressoTS, juntamente com sua descri\xe7\xe3o e uso:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Decorator"),(0,r.kt)("th",{parentName:"tr",align:null},"Descri\xe7\xe3o"),(0,r.kt)("th",{parentName:"tr",align:null},"Uso"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@request()"),(0,r.kt)("td",{parentName:"tr",align:null},"Injeta objeto Express Request."),(0,r.kt)("td",{parentName:"tr",align:null},"execute(@request() req: Request)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@response()"),(0,r.kt)("td",{parentName:"tr",align:null},"Injeta objeto Express Response."),(0,r.kt)("td",{parentName:"tr",align:null},"execute(@response() res: Response)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@requestParam(paramName?: string)"),(0,r.kt)("td",{parentName:"tr",align:null},"Injeta um par\xe2metro da URL da solicita\xe7\xe3o."),(0,r.kt)("td",{parentName:"tr",align:null},"execute(@requestParam('id') id: string)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@queryParam(paramName?: string)"),(0,r.kt)("td",{parentName:"tr",align:null},"Injeta um par\xe2metro da string de consulta da URL da solicita\xe7\xe3o."),(0,r.kt)("td",{parentName:"tr",align:null},"execute(@queryParam('searchTerm') searchTerm: string)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@requestBody()"),(0,r.kt)("td",{parentName:"tr",align:null},"Injeta a carga \xfatil do corpo da solicita\xe7\xe3o."),(0,r.kt)("td",{parentName:"tr",align:null},"execute(@requestBody() body: MyDTO)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@requestHeaders(headerName?: string)"),(0,r.kt)("td",{parentName:"tr",align:null},"Injeta um cabe\xe7alho dos cabe\xe7alhos da solicita\xe7\xe3o."),(0,r.kt)("td",{parentName:"tr",align:null},"execute(@requestHeaders('authorization') auth: string)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@cookies(cookieName?: string)"),(0,r.kt)("td",{parentName:"tr",align:null},"Injeta um cookie dos cookies da solicita\xe7\xe3o."),(0,r.kt)("td",{parentName:"tr",align:null},"execute(@cookies('session') session: string)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@next()"),(0,r.kt)("td",{parentName:"tr",align:null},"Injeta o objeto NextFunction do Express."),(0,r.kt)("td",{parentName:"tr",align:null},"execute(@next() next: NextFunction)")))),(0,r.kt)("h2",{id:"uma-abordagem-mvc"},"Uma abordagem MVC"),(0,r.kt)("p",null,"Apesar de no modelo opinativo recomendarmos um controlador e um caso de uso por rota, voc\xea pode definitivamente usar a abordagem MVC ou qualquer outro padr\xe3o que desejar. Para isso recomendamos a utiliza\xe7\xe3o de um template ",(0,r.kt)("inlineCode",{parentName:"p"},"n\xe3o opinativo"),", no qual o desenvolvedor tem liberdade para customizar sua aplica\xe7\xe3o."),(0,r.kt)("p",null,"Aqui est\xe1 um exemplo de uso da abordagem MVC, que cont\xe9m uma \xfanica classe controladora que manipula a solicita\xe7\xe3o de um recurso de produto:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'@controller("/product")\nclass ProductController {\n  @httpPost("/")\n  create(@response() res: any) {\n    return res.status(201).json({ message: "Product created" });\n  }\n\n  @httpGet("/")\n  list(@response() res: any) {\n    return res.status(200).json({ message: "Product listed" });\n  }\n\n  @httpGet("/:id")\n  get(@response() res: any) {\n    return res.status(200).json({ message: "Product get" });\n  }\n\n  @httpPatch("/:id")\n  update(@response() res: any) {\n    return res.status(200).json({ message: "Product updated" });\n  }\n\n  @httpDelete("/:id")\n  delete(@response() res: any) {\n    return res.status(200).json({ message: "Product deleted" });\n  }\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"apoie-o-projeto"},"Apoie o projeto"),(0,r.kt)("p",null,"ExpressoTS \xe9 um projeto de c\xf3digo aberto licenciado sob o MIT. \xc9 um projeto independente com desenvolvimento cont\xednuo possibilitado gra\xe7as ao seu suporte. Se voc\xea deseja ajudar, por favor considere:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se tornar um ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/sponsors/expressots"},"Sponsor no GitHub"))),(0,r.kt)("li",{parentName:"ul"},"Siga a ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/expressots"},"organiza\xe7\xe3o"))," no GitHub e de um Star \u2b50 no projeto"),(0,r.kt)("li",{parentName:"ul"},"Subscreva no nosso canal na Twitch: ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://www.twitch.tv/richardzampieri"},"Richard Zampieri"))),(0,r.kt)("li",{parentName:"ul"},"Entre no nosso ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://discord.com/invite/PyPJfGK"},"Discord"))),(0,r.kt)("li",{parentName:"ul"},"Contribua submetendo ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/expressots/expressots/issues/new/choose"},"issues e pull requests"))),(0,r.kt)("li",{parentName:"ul"},"Compartilhe o projeto com seus amigos e colegas")))}u.isMDXComponent=!0}}]);