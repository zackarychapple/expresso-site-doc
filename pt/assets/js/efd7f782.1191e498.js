"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[576],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>g});var o=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,o,a=function(e,r){if(null==e)return{};var t,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),d=function(e){var r=o.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=d(e.components);return o.createElement(l.Provider,{value:r},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},m=o.forwardRef((function(e,r){var t=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(t),m=a,g=u["".concat(l,".").concat(m)]||u[m]||c[m]||n;return t?o.createElement(g,s(s({ref:r},p),{},{components:t})):o.createElement(g,s({ref:r},p))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var n=t.length,s=new Array(n);s[0]=m;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var d=2;d<n;d++)s[d]=t[d];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1157:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var o=t(7462),a=(t(7294),t(3905));const n={sidebar_position:14},s="Gerenciamento de Error",i={unversionedId:"overview/error-handling",id:"overview/error-handling",title:"Gerenciamento de Error",description:"Quando se trata de tratamento de erros nas APIs TypeScript do Node.js, existem v\xe1rias pr\xe1ticas recomendadas e abordagens que voc\xea pode seguir. O ExpressoTS fornece uma maneira simples e f\xe1cil de lidar com erros.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/overview/error-handling.md",sourceDirName:"overview",slug:"/overview/error-handling",permalink:"/pt/docs/overview/error-handling",draft:!1,tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"C\xf3digo de Status",permalink:"/pt/docs/overview/status-code"},next:{title:"Teste",permalink:"/pt/docs/overview/test"}},l={},d=[{value:"Nossa solu\xe7\xe3o",id:"nossa-solu\xe7\xe3o",level:2},{value:"Report error",id:"report-error",level:3},{value:"Middleware",id:"middleware",level:3},{value:"Exemplo de uso",id:"exemplo-de-uso",level:2},{value:"Descri\xe7\xe3o dos componentes de tratamento de erro",id:"descri\xe7\xe3o-dos-componentes-de-tratamento-de-erro",level:2},{value:"Apoie o projeto",id:"apoie-o-projeto",level:2}],p={toc:d},u="wrapper";function c(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,o.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gerenciamento-de-error"},"Gerenciamento de Error"),(0,a.kt)("p",null,"Quando se trata de tratamento de erros nas APIs TypeScript do Node.js, existem v\xe1rias pr\xe1ticas recomendadas e abordagens que voc\xea pode seguir. O ExpressoTS fornece uma maneira simples e f\xe1cil de lidar com erros."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Usamos c\xf3digos de status HTTP apropriadamente: HTTP ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/pt/docs/overview/status-code"},"c\xf3digos de status"))," s\xe3o usados para indicar o status de uma resposta. \xc9 importante utiliz\xe1-los adequadamente em sua API para indicar o sucesso ou falha de uma opera\xe7\xe3o.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Usamos um formato de erro consistente: defina um formato de erro consistente em sua API para que os consumidores possam entender e lidar facilmente com os erros.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Lidamos com erros em middleware: as fun\xe7\xf5es de middleware s\xe3o uma \xf3tima maneira de lidar com erros em um local centralizado.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Usamos blocos try-catch: Use blocos try-catch para lidar com erros s\xedncronos em seu c\xf3digo. Se ocorrer um erro no bloco try, o bloco catch pode lidar com isso. Certifique-se de lan\xe7ar o erro para que ele possa ser tratado por nosso middleware de tratamento de erros.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Usamos tratamento de erro async/await: ao usar async/await, voc\xea pode usar blocos try-catch para lidar com erros s\xedncronos em seu c\xf3digo. No entanto, voc\xea tamb\xe9m precisa lidar com quaisquer erros ass\xedncronos que possam ocorrer.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Registramos erros: o registro de erros \xe9 importante para depura\xe7\xe3o e monitoramento."))),(0,a.kt)("h2",{id:"nossa-solu\xe7\xe3o"},"Nossa solu\xe7\xe3o"),(0,a.kt)("p",null,"Desenvolvemos uma classe de relat\xf3rio de erros padronizada chamada ",(0,a.kt)("inlineCode",{parentName:"p"},"Report")," que fornece um local centralizado para lan\xe7amento e tratamento de erros, o que pode simplificar o tratamento de erros em todo o aplicativo."),(0,a.kt)("p",null,"A fun\xe7\xe3o errorHandler fornece um local centralizado para manipula\xe7\xe3o de erros que ocorrem durante o processamento da solicita\xe7\xe3o. Ao definir um formato de resposta de erro padr\xe3o, ele ajuda a garantir a consist\xeancia nas mensagens de erro que s\xe3o retornadas aos clientes."),(0,a.kt)("p",null,"Essa abordagem \xe9 melhor usada em aplicativos com uma grande base de c\xf3digo ou l\xf3gica de neg\xf3cios complexa, onde os erros podem ocorrer com frequ\xeancia e precisam ser tratados de forma consistente em diferentes partes do aplicativo."),(0,a.kt)("h3",{id:"report-error"},"Report error"),(0,a.kt)("p",null,"A classe de relat\xf3rio \xe9 uma classe de utilit\xe1rio para gerenciar e lan\xe7ar erros espec\xedficos do aplicativo."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"class Report {\n\n    /**\n     * O m\xe9todo Error pega uma inst\xe2ncia de Error e a lan\xe7a.\n     * @param error - Uma inst\xe2ncia de Error ou uma string que representa a mensagem de erro.\n     * @param statusCode - O c\xf3digo de status HTTP do erro.\n     * @param service - O servi\xe7o onde ocorreu o erro.\n     */\n    public static Error(error: Error | string, statusCode?: number, service?: string): void { }\n}\n")),(0,a.kt)("p",null,"Depois de relatar um erro conhecido por meio do m\xe9todo ",(0,a.kt)("inlineCode",{parentName:"p"},"Report.Error()"),", o erro ser\xe1 tratado pelo middleware ",(0,a.kt)("inlineCode",{parentName:"p"},"errorHandler()")," e ser\xe1 retornado ao cliente no formato json analisado."),(0,a.kt)("h3",{id:"middleware"},"Middleware"),(0,a.kt)("p",null,"Essa fun\xe7\xe3o de middleware \xe9 usada para manipular erros que ocorrem durante o processamento da solicita\xe7\xe3o."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"function errorHandler(error: IAppError, req: Request, res: Response, next: NextFunction): void {\n    res.status(error.statusCode || StatusCode.InternalServerError).json({statusCode: error.statusCode, error: error.message});\n}\n\nexport default errorHandler;\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"A fun\xe7\xe3o ",(0,a.kt)("inlineCode",{parentName:"p"},"errorHandler()")," \xe9 uma fun\xe7\xe3o de middleware de tratamento de erros Express personalizada.\nEle registra o erro, define o c\xf3digo de status e envia uma resposta JSON contendo o c\xf3digo de status e a mensagem de erro.")),(0,a.kt)("h2",{id:"exemplo-de-uso"},"Exemplo de uso"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'Report.Error(error, StatusCode.BadRequest, "your-service");\n// Ou\nReport.Error("your-error", StatusCode.BadRequest, "your-service");\n')),(0,a.kt)("p",null,"Use case example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'@provide(CreateUserUseCase)\nclass CreateUserUseCase {\n    constructor(private userRepository: UserRepository) {}\n\n    execute(data: ICreateUserRequestDTO): ICreateUserResponseDTO | null {\n        try {\n            const { name, email } = data;\n\n            const userAlreadyExists = await this.userRepository.findByEmail(email);\n\n            if (userAlreadyExists) {\n                Report.Error("User already exists", StatusCode.BadRequest, "create-user-usecase");\n            }\n\n            const user: User | null = this.userRepository.create(new User(name, email));\n\n            let response: ICreateUserResponseDTO;\n\n            if (user !== null) {\n                response = {\n                    id: user.Id,\n                    name: user.name,\n                    email: user.email,\n                    status: "success",\n                };\n                return response;\n            }\n\n            return null;\n        } catch (error: any) {\n            throw error;\n        }\n    }\n}\n')),(0,a.kt)("h2",{id:"descri\xe7\xe3o-dos-componentes-de-tratamento-de-erro"},"Descri\xe7\xe3o dos componentes de tratamento de erro"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Objeto"),(0,a.kt)("th",{parentName:"tr",align:null},"Descri\xe7\xe3o"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Report.Error"),(0,a.kt)("td",{parentName:"tr",align:null},"M\xe9todo est\xe1tico para reportar erros conhecidos.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"IAppError"),(0,a.kt)("td",{parentName:"tr",align:null},"Interface de erro do aplicativo que define o formato do objeto de erro.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"StatusCode"),(0,a.kt)("td",{parentName:"tr",align:null},"C\xf3digo de status HTTP.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Error Message"),(0,a.kt)("td",{parentName:"tr",align:null},"Detalhes da mensagem de erro que o desenvolvedor deseja registrar.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Error Service"),(0,a.kt)("td",{parentName:"tr",align:null},"Servi\xe7o que originou o erro, a ser utilizado no sistema de log.")))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"apoie-o-projeto"},"Apoie o projeto"),(0,a.kt)("p",null,"ExpressoTS \xe9 um projeto de c\xf3digo aberto licenciado sob o MIT. \xc9 um projeto independente com desenvolvimento cont\xednuo possibilitado gra\xe7as ao seu suporte. Se voc\xea deseja ajudar, por favor considere:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Se tornar um ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/sponsors/expressots"},"Sponsor no GitHub"))),(0,a.kt)("li",{parentName:"ul"},"Siga a ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/expressots"},"organiza\xe7\xe3o"))," no GitHub e de um Star \u2b50 no projeto"),(0,a.kt)("li",{parentName:"ul"},"Subscreva no nosso canal na Twitch: ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://www.twitch.tv/richardzampieri"},"Richard Zampieri"))),(0,a.kt)("li",{parentName:"ul"},"Entre no nosso ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://discord.com/invite/PyPJfGK"},"Discord"))),(0,a.kt)("li",{parentName:"ul"},"Contribua submetendo ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/expressots/expressots/issues/new/choose"},"issues e pull requests"))),(0,a.kt)("li",{parentName:"ul"},"Compartilhe o projeto com seus amigos e colegas")))}c.isMDXComponent=!0}}]);