"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[377],{3905:(e,r,t)=>{t.d(r,{Zo:()=>m,kt:()=>v});var a=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,a,o=function(e,r){if(null==e)return{};var t,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),d=function(e){var r=a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},m=function(e){var r=d(e.components);return a.createElement(p.Provider,{value:r},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},c=a.forwardRef((function(e,r){var t=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),l=d(t),c=o,v=l["".concat(p,".").concat(c)]||l[c]||u[c]||n;return t?a.createElement(v,s(s({ref:r},m),{},{components:t})):a.createElement(v,s({ref:r},m))}));function v(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var n=t.length,s=new Array(n);s[0]=c;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i[l]="string"==typeof e?e:o,s[1]=i;for(var d=2;d<n;d++)s[d]=t[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},2054:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var a=t(7462),o=(t(7294),t(3905));const n={sidebar_position:9},s="Entidades",i={unversionedId:"overview/entities",id:"overview/entities",title:"Entidades",description:"As entidades s\xe3o os componentes principais de uma aplica\xe7\xe3o ExpressoTS. Elas s\xe3o os objetos que s\xe3o usados para representar os dados que ser\xe3o manipulados pela aplica\xe7\xe3o.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/overview/entities.md",sourceDirName:"overview",slug:"/overview/entities",permalink:"/pt/docs/overview/entities",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Reposit\xf3rios",permalink:"/pt/docs/overview/repositories"},next:{title:"Decoradores",permalink:"/pt/docs/overview/decorators"}},p={},d=[{value:"Exemplo de entidade",id:"exemplo-de-entidade",level:2},{value:"Entidades e encapsulamento",id:"entidades-e-encapsulamento",level:2},{value:"Inje\xe7\xe3o de entidade",id:"inje\xe7\xe3o-de-entidade",level:2},{value:"Evite isso",id:"evite-isso",level:2},{value:"Raz\xf5es para evitar par\xe2metro primitivo em classes injet\xe1veis",id:"raz\xf5es-para-evitar-par\xe2metro-primitivo-em-classes-injet\xe1veis",level:3},{value:"Inje\xe7\xe3o adequada de entidade",id:"inje\xe7\xe3o-adequada-de-entidade",level:2},{value:"Apoie o projeto",id:"apoie-o-projeto",level:2}],m={toc:d},l="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(l,(0,a.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"entidades"},"Entidades"),(0,o.kt)("p",null,"As entidades s\xe3o os componentes principais de uma aplica\xe7\xe3o ExpressoTS. Elas s\xe3o os objetos que s\xe3o usados para representar os dados que ser\xe3o manipulados pela aplica\xe7\xe3o."),(0,o.kt)("p",null,"Se uma entidade mudar, provavelmente os casos de uso e controladores tamb\xe9m mudar\xe3o. Isso ocorre porque os casos de uso e controladores s\xe3o respons\xe1veis por manipular os dados representados pelas entidades."),(0,o.kt)("h2",{id:"exemplo-de-entidade"},"Exemplo de entidade"),(0,o.kt)("p",null,"Um exemplo simples de uma entidade User e suas propriedades:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"@provide(User)\nclass User {\n  private id: string;\n  public name: string;\n  public email: string;\n\n  constructor() {\n    this.id = uuidv4();\n  }\n\n  get Id(): string {\n    return this.id;\n  }\n}\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Lembre-se que voc\xea deve ter um arquivo por entidade")),(0,o.kt)("h2",{id:"entidades-e-encapsulamento"},"Entidades e encapsulamento"),(0,o.kt)("p",null,"Esta se\xe7\xe3o \xe9 dedicada a promover uma reflex\xe3o quando se pensa em entidades. Por anos, nos foi dito que as propriedades das entidades ou classes devem ser encapsuladas, seus m\xe9todos devem abstrair a implementa\xe7\xe3o interna e expor apenas as informa\xe7\xf5es necess\xe1rias para o mundo externo. Esta \xe9 uma boa pr\xe1tica ao pensar no Paradigma de Programa\xe7\xe3o Orientada a Objetos, no entanto, nem sempre \xe9 a melhor abordagem."),(0,o.kt)("p",null,"Se voc\xea pensar sobre isso, classes ou entidades, qualquer que seja o nome que voc\xea d\xea a elas, s\xe3o apenas uma maneira de representar dados. Elas s\xe3o apenas uma maneira de agrupar dados juntos. Com isso em mente, as classes ou entidades se tornam muito mais simples de manter e entender, pois n\xe3o cont\xeam nenhuma l\xf3gica."),(0,o.kt)("p",null,"Esta forma de pensar \xe9 chamada de ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://martinfowler.com/bliki/AnemicDomainModel.html"},"Modelo de Dom\xednio An\xeamico"))," e \xe9 um t\xf3pico muito controverso. N\xe3o \xe9 o objetivo desta documenta\xe7\xe3o discutir este t\xf3pico, mas \xe9 importante mencion\xe1-lo, j\xe1 que \xe9 um conceito muito importante quando se pensa em ExpressoTS."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diga adeus as classes God, seja bemvindo simples entidades, seja bemvindo o dado.")),(0,o.kt)("h2",{id:"inje\xe7\xe3o-de-entidade"},"Inje\xe7\xe3o de entidade"),(0,o.kt)("p",null,"Se sua entidade tiver depend\xeancias, voc\xea pode injet\xe1-las usando o decorador ",(0,o.kt)("inlineCode",{parentName:"p"},"@inject"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'@provide(User)\nclass User {\n    \n  constructor(@inject("logger") private logger: Logger) {}\n}\n')),(0,o.kt)("h2",{id:"evite-isso"},"Evite isso"),(0,o.kt)("p",null,"Evite marcar construtores com par\xe2metros primitivos como injet\xe1veis. Isso ocorre porque pode ser dif\xedcil para o cont\xeainer de DI inferir quais valores fornecer para esses par\xe2metros. Aqui est\xe1 um exemplo do que voc\xea deve evitar:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"@provide(User)\nclass User {\n  name: string;\n  constructor(name: string) {\n    this.name = name;\n  }\n}\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Em muitos sistemas de inje\xe7\xe3o de depend\xeancia (DI), incluindo InversifyJS, o cont\xeainer de DI \xe9 respons\xe1vel por construir objetos e injetar depend\xeancias. Quando um construtor de classe cont\xe9m par\xe2metros primitivos, pode ser dif\xedcil para o cont\xeainer de DI inferir quais valores fornecer para esses par\xe2metros. Isso ocorre porque os valores primitivos (como strings, n\xfameros e booleanos) n\xe3o carregam nenhum significado sem\xe2ntico inerente que o cont\xeainer possa entender.")),(0,o.kt)("h3",{id:"raz\xf5es-para-evitar-par\xe2metro-primitivo-em-classes-injet\xe1veis"},"Raz\xf5es para evitar par\xe2metro primitivo em classes injet\xe1veis"),(0,o.kt)("p",null,"Aqui est\xe3o algumas das raz\xf5es pelas quais construtores com par\xe2metros primitivos podem ser problem\xe1ticos em DI:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Ambig\xfcidade: Se uma classe tiver um construtor que requer tipos primitivos, o cont\xeainer DI n\xe3o saber\xe1 quais valores injetar. Por exemplo, se uma classe requer um n\xfamero em seu construtor, o container DI n\xe3o sabe o que esse n\xfamero representa e qual valor ele deve ter.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Inflexibilidade: Um valor primitivo no construtor implica que o valor \xe9 uma parte fixa da classe. No entanto, a DI \xe9 frequentemente usada para gerenciar partes intercambi\xe1veis de um aplicativo (por exemplo, diferentes implementa\xe7\xf5es de uma interface).")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"N\xe3o descritivo: valores primitivos geralmente n\xe3o s\xe3o descritivos e podem levar a c\xf3digos confusos. Por exemplo, um construtor que usa dois par\xe2metros de string pode levantar quest\xf5es como: O que essas strings representam? Existem formatos ou restri\xe7\xf5es espec\xedficas nessas strings?"))),(0,o.kt)("h2",{id:"inje\xe7\xe3o-adequada-de-entidade"},"Inje\xe7\xe3o adequada de entidade"),(0,o.kt)("p",null,"Se voc\xea deseja injetar uma entidade em outra classe, deve repensar seu design. Se voc\xea realmente precisa de par\xe2metros primitivos em seu construtor, use f\xe1bricas para criar suas entidades ou o padr\xe3o Repository."),(0,o.kt)("p",null,"Aqui est\xe1 um exemplo de uma f\xe1brica:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"@provide(User)\nclass User implements IEntity {\n  public id: string;\n  public name!: string;\n  public email!: string;\n\n  constructor() {\n    this.id = randomUUID();\n  }\n}\n\ninterface IUserFactory {\n  create(name: string, email: string): User;\n}\n\n@provide(UserFactory)\nclass UserFactory implements IUserFactory {\n  create(name: string, email: string): User {\n    const user = new User();\n    user.name = name;\n    user.email = email;\n    return user;\n  }\n}\n\nexport { User, UserFactory };\n\n")),(0,o.kt)("p",null,"Agora ",(0,o.kt)("inlineCode",{parentName:"p"},"UserFactory")," pode ser facilmente injetado em outras classes."),(0,o.kt)("p",null,"Como mencionado acima, existem v\xe1rias outras abordagens, desde que voc\xea permane\xe7a forte \ud83d\ude01 de n\xe3o usar construtores com par\xe2metros primitivos nas classes que planeja injetar."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"apoie-o-projeto"},"Apoie o projeto"),(0,o.kt)("p",null,"ExpressoTS \xe9 um projeto de c\xf3digo aberto licenciado sob o MIT. \xc9 um projeto independente com desenvolvimento cont\xednuo possibilitado gra\xe7as ao seu suporte. Se voc\xea deseja ajudar, por favor considere:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Se tornar um ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/sponsors/expressots"},"Sponsor no GitHub"))),(0,o.kt)("li",{parentName:"ul"},"Siga a ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/expressots"},"organiza\xe7\xe3o"))," no GitHub e de um Star \u2b50 no projeto"),(0,o.kt)("li",{parentName:"ul"},"Subscreva no nosso canal na Twitch: ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://www.twitch.tv/richardzampieri"},"Richard Zampieri"))),(0,o.kt)("li",{parentName:"ul"},"Entre no nosso ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://discord.com/invite/PyPJfGK"},"Discord"))),(0,o.kt)("li",{parentName:"ul"},"Contribua submetendo ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/expressots/expressots/issues/new/choose"},"issues e pull requests"))),(0,o.kt)("li",{parentName:"ul"},"Compartilhe o projeto com seus amigos e colegas")))}u.isMDXComponent=!0}}]);